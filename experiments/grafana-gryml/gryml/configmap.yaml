apiVersion: v1
kind: ConfigMap
metadata:
  name: "" #{chart.name}
  labels: {} #[append]{chart.labels}
  annotations: {} #[append]{chart.annotations}
  namespace: "" #{grafana.namespace}

data: #[append]{configs} #TODO: nested ini templates?
  plugins: [] #[if plugins]{plugins|join(,)}
  grafana.ini: "" #{grafana.ini|template(ini)}

  # TODO: this is very ugly, what can we do about that?
  download_dashboards.sh: | #[if dashboards]{dashboards}|template(helm)
    #!/usr/bin/env sh
    set -euf
    {{- if .Values.dashboardProviders }}
      {{- range $key, $value := .Values.dashboardProviders }}
        {{- range $value.providers }}
    mkdir -p {{ .options.path }}
        {{- end }}
      {{- end }}
    {{- end }}

  {{- range $provider, $dashboards := .Values.dashboards }}
    {{- range $key, $value := $dashboards }}
      {{- if (or (hasKey $value "gnetId") (hasKey $value "url")) }}
    curl -skf \
    --connect-timeout 60 \
    --max-time 60 \
      {{- if not $value.b64content }}
    -H "Accept: application/json" \
    -H "Content-Type: application/json;charset=UTF-8" \
      {{ end }}
    {{- if $value.url -}}{{ $value.url }}{{- else -}} https://grafana.com/api/dashboards/{{ $value.gnetId }}/revisions/{{- if $value.revision -}}{{ $value.revision }}{{- else -}}1{{- end -}}/download{{- end -}}{{ if $value.datasource }}| sed 's|\"datasource\":[^,]*|\"datasource\": \"{{ $value.datasource }}\"|g'{{ end }}{{- if $value.b64content -}} | base64 -d {{- end -}} \
    > /var/lib/grafana/dashboards/{{ $provider }}/{{ $key }}.json
      {{- end -}}
    {{- end }}
